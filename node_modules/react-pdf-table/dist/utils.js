"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("core-js/modules/es.object.assign.js");

require("core-js/modules/es.array.reduce.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const combineStyles = (main, override) => {
  let result = _objectSpread({}, main);

  let ov = _objectSpread({}, override);

  if (typeof override == "object") {
    Object.assign(result, ov);
  }

  return result;
};

const calculateWidth = function calculateWidth() {
  let total = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  let totalElements = arguments.length > 1 ? arguments[1] : undefined;
  let width = (100 - total) / totalElements;
  return width + "%";
};
/**
 * Sum of an array of numbers
 * @param {array} array
 * @returns {number} sum of the array
 */


const sumOfArray = array => {
  if (Array.isArray(array)) {
    return array.reduce((a, b) => a + b, 0);
  }

  return 0;
};

var _default = {
  combineStyles,
  calculateWidth,
  sumOfArray
};
exports.default = _default;