"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _renderer = require("@react-pdf/renderer");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = _interopRequireDefault(require("../../styles"));

var _utils = _interopRequireDefault(require("../../utils"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const TableCell = props => {
  const {
    text,
    horizontal,
    vertical,
    width,
    backgroundColor
  } = props;
  const {
    __totalElements,
    __elementsWidthArray
  } = props;

  const totalWidth = _utils.default.sumOfArray(__elementsWidthArray);

  const totalElementsThatHaveWidth = __elementsWidthArray.filter(width => width > 0).length;

  let style = {
    width: width + "%"
  };

  if (width) {
    style.width = width + "%";
  } else {
    style.width = _utils.default.calculateWidth(totalWidth, __totalElements - totalElementsThatHaveWidth);
  }

  if (horizontal === 'center' || horizontal === 'right' || horizontal === 'left') {
    style.justifyContent = horizontal;
  }

  if (vertical === 'center' || vertical === 'start' || vertical === 'end') {
    style.alignItems = vertical;
  }

  if (backgroundColor) {
    style.backgroundColor = backgroundColor;
  }

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_renderer.View, {
    style: _utils.default.combineStyles(_styles.default.headerCol, style)
  }, /*#__PURE__*/_react.default.createElement(_renderer.Text, {
    style: _styles.default.headerCell
  }, text)));
};

TableCell.propTypes = {
  /**
   * The width for this table cell.
   * If not set, the width will be calculated based on the total width of the row.
   * @default 0
   */
  width: _propTypes.default.number,

  /**
   * The text to display in the header cell
   */
  text: _propTypes.default.string.isRequired,

  /**
   * The style to apply to the header cell. It can be one of the following:
   * - 'left'
   * - 'center'
   * - 'right'
   * @default 'left'
   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content
   */
  horizontal: _propTypes.default.oneOf(['left', 'right', 'center']),

  /**
   * The vertical alignment for the header cell. It can be one of the following:
   * - 'start'
   * - 'center'
   * - 'end'
   * @default 'start'
   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Aligning_Items_in_a_Flex_Container
   */
  vertical: _propTypes.default.oneOf(['start', 'center', 'end']),

  /**
   * Background color for this cell.
   * It can be a valid CSS color value.
   * @default null
   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/color_value
   */
  backgroundColor: _propTypes.default.string
};
TableCell.defaultProps = {
  width: 0,
  align: 'left'
};
var _default = TableCell;
exports.default = _default;